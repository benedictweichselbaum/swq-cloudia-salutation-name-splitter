{
	"info": {
		"_postman_id": "0a5eef2c-2697-4fd7-a671-df662ac458e8",
		"name": "ContactSplitterIntegrationTests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Testdaten Kunde",
			"item": [
				{
					"name": "Sandra-Berger-Test",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Body is correct\", function () {\r",
									"    pm.expect(pm.response.json()['letterSalutation']).to.equal(\"Sehr geehrte Frau Berger\")\r",
									"    pm.expect(pm.response.json()['salutation']).to.equal(\"Frau\")\r",
									"    pm.expect(pm.response.json()['title']).to.equal(\"\")\r",
									"    pm.expect(pm.response.json()['gender']).to.equal(\"F\")\r",
									"    pm.expect(pm.response.json()['firstName']).to.equal(\"Sandra\")\r",
									"    pm.expect(pm.response.json()['lastName']).to.equal(\"Berger\")\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"input\": \"Frau Sandra Berger\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/contact",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"contact"
							]
						}
					},
					"response": []
				},
				{
					"name": "Dr. Sandro Gutmensch Test",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Body is correct\", function () {\r",
									"    pm.expect(pm.response.json()['letterSalutation']).to.equal(\"Sehr geehrter Herr Gutmensch\")\r",
									"    pm.expect(pm.response.json()['salutation']).to.equal(\"Herr\")\r",
									"    pm.expect(pm.response.json()['title']).to.equal(\"Dr.\")\r",
									"    pm.expect(pm.response.json()['gender']).to.equal(\"M\")\r",
									"    pm.expect(pm.response.json()['firstName']).to.equal(\"Sandro\")\r",
									"    pm.expect(pm.response.json()['lastName']).to.equal(\"Gutmensch\")\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"input\": \"Herr Dr. Sandro Gutmensch\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/contact",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"contact"
							]
						}
					},
					"response": []
				},
				{
					"name": "Heinrich Freiherr vom Wald Test",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Body is correct\", function () {\r",
									"    pm.expect(pm.response.json()['letterSalutation']).to.equal(\"Sehr geehrter Herr Freiherr vom Wald\")\r",
									"    pm.expect(pm.response.json()['salutation']).to.equal(\"Herr\")\r",
									"    pm.expect(pm.response.json()['title']).to.equal(\"Professor\")\r",
									"    pm.expect(pm.response.json()['gender']).to.equal(\"M\")\r",
									"    pm.expect(pm.response.json()['firstName']).to.equal(\"Heinreich\")\r",
									"    pm.expect(pm.response.json()['lastName']).to.equal(\"Freiherr vom Wald\")\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"input\": \"Professor Heinreich Freiherr vom Wald\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/contact",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"contact"
							]
						}
					},
					"response": []
				},
				{
					"name": "Mrs Faber Test",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"jsonData = pm.response.json()\r",
									"pm.test(\"Body is correct\", function () {\r",
									"    pm.expect(jsonData.letterSalutation).to.equal(\"Dear Mrs Faber\")\r",
									"    pm.expect(jsonData['salutation']).to.eql(\"Mrs\")\r",
									"    pm.expect(jsonData['title']).to.equal(\"\")\r",
									"    pm.expect(jsonData['gender']).to.equal(\"F\")\r",
									"    pm.expect(jsonData['firstName']).to.equal(\"Doreen\")\r",
									"    pm.expect(jsonData['lastName']).to.equal(\"Faber\")\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"input\": \"Mrs. Doreen Faber\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/contact",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"contact"
							]
						}
					},
					"response": []
				},
				{
					"name": "Mme. Charlotte Noir Test",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Body is correct\", function () {\r",
									"    pm.expect(pm.response.json()['letterSalutation']).to.equal(\"Madame Noir\")\r",
									"    pm.expect(pm.response.json()['salutation']).to.equal(\"Mme\")\r",
									"    pm.expect(pm.response.json()['title']).to.equal(\"\")\r",
									"    pm.expect(pm.response.json()['gender']).to.equal(\"W\")\r",
									"    pm.expect(pm.response.json()['firstName']).to.equal(\"Charlotte\")\r",
									"    pm.expect(pm.response.json()['lastName']).to.equal(\"Noir\")\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"input\": \"Mme. Charlotte Noir\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/contact",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"contact"
							]
						}
					},
					"response": []
				},
				{
					"name": "Estobar y Gonzales Test",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Body is correct\", function () {\r",
									"    pm.expect(pm.response.json()['letterSalutation']).to.equal(\"Sehr geehrte Damen und Herren\")\r",
									"    pm.expect(pm.response.json()['salutation']).to.equal(null)\r",
									"    pm.expect(pm.response.json()['title']).to.equal(\"\")\r",
									"    pm.expect(pm.response.json()['gender']).to.equal(\"-\")\r",
									"    pm.expect(pm.response.json()['firstName']).to.equal(\"Estobar\")\r",
									"    pm.expect(pm.response.json()['lastName']).to.equal(\"y Gonzales\")\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"input\": \"Estobar y Gonzales\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/contact",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"contact"
							]
						}
					},
					"response": []
				},
				{
					"name": "Leuthäuser-Schnarrenberger-Test",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Body is correct\", function () {\r",
									"    pm.expect(pm.response.json()['letterSalutation']).to.equal(\"Sehr geehrte Frau Prof. Dr. von Leuthäuser-Schnarrenberger\")\r",
									"    pm.expect(pm.response.json()['salutation']).to.equal(\"Frau\")\r",
									"    pm.expect(pm.response.json()['title']).to.equal(\"Prof. Dr. rer. nat.\")\r",
									"    pm.expect(pm.response.json()['gender']).to.equal(\"F\")\r",
									"    pm.expect(pm.response.json()['firstName']).to.equal(\"Maria\")\r",
									"    pm.expect(pm.response.json()['lastName']).to.equal(\"von Leuthäuser-Schnarrenberger\")\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"input\": \"Frau Prof. Dr. rer. nat. Maria von Leuthäuser-Schnarrenberger\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/contact",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"contact"
							]
						}
					},
					"response": []
				},
				{
					"name": "Max von Müller Test",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Body is correct\", function () {\r",
									"    pm.expect(pm.response.json()['letterSalutation']).to.equal(\"Sehr geehrter Herr Dipl. Ing. von Müller\")\r",
									"    pm.expect(pm.response.json()['salutation']).to.equal(\"Herr\")\r",
									"    pm.expect(pm.response.json()['title']).to.equal(\"Dipl. Ing.\")\r",
									"    pm.expect(pm.response.json()['gender']).to.equal(\"M\")\r",
									"    pm.expect(pm.response.json()['firstName']).to.equal(\"Max\")\r",
									"    pm.expect(pm.response.json()['lastName']).to.equal(\"von Müller\")\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"input\": \"Herr Dipl. Ing. Max von Müller\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/contact",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"contact"
							]
						}
					},
					"response": []
				},
				{
					"name": "Russwurm, Windfried Test",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Body is correct\", function () {\r",
									"    pm.expect(pm.response.json()['letterSalutation']).to.equal(\"Sehr geehrte Damen und Herren\")\r",
									"    pm.expect(pm.response.json()['salutation']).to.equal(null)\r",
									"    pm.expect(pm.response.json()['title']).to.equal(\"Dr.\")\r",
									"    pm.expect(pm.response.json()['gender']).to.equal(\"-\")\r",
									"    pm.expect(pm.response.json()['firstName']).to.equal(\"Winfried\")\r",
									"    pm.expect(pm.response.json()['lastName']).to.equal(\"Russwurm\")\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"input\": \"Dr. Russwurm, Winfried\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/contact",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"contact"
							]
						}
					},
					"response": []
				},
				{
					"name": "Paul Steffens Test",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Body is correct\", function () {\r",
									"    pm.expect(pm.response.json()['letterSalutation']).to.equal(\"Sehr geehrte Herr Dr. Steffens\")\r",
									"    pm.expect(pm.response.json()['salutation']).to.equal(\"Herr\")\r",
									"    pm.expect(pm.response.json()['title']).to.equal(\"Dr.-Ing. Dr. rer. nat. Dr. h.c. mult.\")\r",
									"    pm.expect(pm.response.json()['gender']).to.equal(\"H\")\r",
									"    pm.expect(pm.response.json()['firstName']).to.equal(\"Paul\")\r",
									"    pm.expect(pm.response.json()['lastName']).to.equal(\"Steffens\")\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"input\": \"Herr Dr.-Ing. Dr. rer. nat. Dr. h.c. mult. Paul Steffens\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/contact",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"contact"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Funktionstests",
			"item": [
				{
					"name": "Briefanrede",
					"item": [
						{
							"name": "Nachnamen Prefix leitet Nachnamen ein (mit Bindestrich)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Nur der Nachname ist in der Briefanrede\", function () {\r",
											"    pm.expect(pm.response.json()['letterSalutation']).to.equal(\"Sehr geehrte Frau von Leuthäuser-Schnarrenberger\")\r",
											"    pm.expect(pm.response.json()['salutation']).to.equal(\"Frau\")\r",
											"    pm.expect(pm.response.json()['title']).to.equal(\"\")\r",
											"    pm.expect(pm.response.json()['gender']).to.equal(\"F\")\r",
											"    pm.expect(pm.response.json()['firstName']).to.equal(\"Maria\")\r",
											"    pm.expect(pm.response.json()['lastName']).to.equal(\"von Leuthäuser-Schnarrenberger\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"input\": \"Frau Maria von Leuthäuser-Schnarrenberger\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:5000/contact",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"contact"
									]
								}
							},
							"response": []
						},
						{
							"name": "Nachnamen Prefix leitet Nachnamen ein (ohne Bindestrich)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Body is correct\", function () {\r",
											"    pm.expect(pm.response.json()['letterSalutation']).to.equal(\"Sehr geehrte Frau Prof. Dr. von Leuthäuser-Schnarrenberger\")\r",
											"    pm.expect(pm.response.json()['salutation']).to.equal(\"Frau\")\r",
											"    pm.expect(pm.response.json()['title']).to.equal(\"Prof. Dr. rer. nat.\")\r",
											"    pm.expect(pm.response.json()['gender']).to.equal(\"F\")\r",
											"    pm.expect(pm.response.json()['firstName']).to.equal(\"Maria\")\r",
											"    pm.expect(pm.response.json()['lastName']).to.equal(\"von Leuthäuser-Schnarrenberger\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"input\": \"Frau Prof. Dr. rer. nat. Maria von Leuthäuser-Schnarrenberger\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:5000/contact",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"contact"
									]
								}
							},
							"response": []
						},
						{
							"name": "Nur der Nachname ist in der Briefanrede",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Nur der Nachname ist in der Briefanrede\", function () {\r",
											"    pm.expect(pm.response.json()['letterSalutation']).to.equal(\"Sehr geehrte Frau Berger\")\r",
											"    pm.expect(pm.response.json()['salutation']).to.equal(\"Frau\")\r",
											"    pm.expect(pm.response.json()['firstName']).to.equal(\"Sandra\")\r",
											"    pm.expect(pm.response.json()['lastName']).to.equal(\"Berger\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"input\": \"Frau Sandra Berger\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:5000/contact",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"contact"
									]
								}
							},
							"response": []
						},
						{
							"name": "Bindestrich konkateniert Nachnamen",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Nur der Nachname ist in der Briefanrede\", function () {\r",
											"    pm.expect(pm.response.json()['letterSalutation']).to.equal(\"Sehr geehrte Frau Berger\")\r",
											"    pm.expect(pm.response.json()['salutation']).to.equal(\"Frau\")\r",
											"    pm.expect(pm.response.json()['firstName']).to.equal(\"Sandra\")\r",
											"    pm.expect(pm.response.json()['lastName']).to.equal(\"Berger\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"input\": \"Frau Sandra Berger\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:5000/contact",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"contact"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Titelerkennung",
					"item": [
						{
							"name": "Ein alleinstehender Doktortitel wird erkannt",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Body is correct\", function () {\r",
											"    pm.expect(pm.response.json()['salutation']).to.equal(\"Herr\")\r",
											"    pm.expect(pm.response.json()['title']).to.equal(\"Dr.\")\r",
											"    pm.expect(pm.response.json()['firstName']).to.equal(\"Sandro\")\r",
											"    pm.expect(pm.response.json()['lastName']).to.equal(\"Gutmensch\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"input\": \"Herr Dr. Sandro Gutmensch\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:5000/contact",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"contact"
									]
								}
							},
							"response": []
						},
						{
							"name": "Ein alleinstehender Doktortitel mit Zusatz wird erkannt",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Body is correct\", function () {\r",
											"    pm.expect(pm.response.json()['salutation']).to.equal(\"Herr\")\r",
											"    pm.expect(pm.response.json()['title']).to.equal(\"Dr.\")\r",
											"    pm.expect(pm.response.json()['firstName']).to.equal(\"Sandro\")\r",
											"    pm.expect(pm.response.json()['lastName']).to.equal(\"Gutmensch\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"input\": \"Herr Dr. Sandro Gutmensch\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:5000/contact",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"contact"
									]
								}
							},
							"response": []
						},
						{
							"name": "Zwei Doktortitel hintereinander werden erkannt",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Zwei Doktortitel hintereinander werden erkannt\", function () {\r",
											"    pm.expect(pm.response.json()['salutation']).to.equal(\"Herr\")\r",
											"    pm.expect(pm.response.json()['title']).to.equal(\"Dr. Dr.\")\r",
											"    pm.expect(pm.response.json()['firstName']).to.equal(\"Sandro\")\r",
											"    pm.expect(pm.response.json()['lastName']).to.equal(\"Gutmensch\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"input\": \"Herr Dr. Dr. Sandro Gutmensch\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:5000/contact",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"contact"
									]
								}
							},
							"response": []
						},
						{
							"name": "Mehrere Kombinationen von Titeln werden erkannt",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Body is correct\", function () {\r",
											"    pm.expect(pm.response.json()['letterSalutation']).to.equal(\"Sehr geehrte Herr Dr. Steffens\")\r",
											"    pm.expect(pm.response.json()['salutation']).to.equal(\"Herr\")\r",
											"    pm.expect(pm.response.json()['title']).to.equal(\"Dr.-Ing. Dr. rer. nat. Dr. h.c. mult.\")\r",
											"    pm.expect(pm.response.json()['gender']).to.equal(\"H\")\r",
											"    pm.expect(pm.response.json()['firstName']).to.equal(\"Paul\")\r",
											"    pm.expect(pm.response.json()['lastName']).to.equal(\"Steffens\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"input\": \"Herr Dr.-Ing. Dr. rer. nat. Dr. h.c. mult. Paul Steffens\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:5000/contact",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"contact"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Geschlechtserkennung",
					"item": [
						{
							"name": "Frau wird erkannt, Anrede wird angepasst",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Frau wird erkannt, Anrede wird angepasst\", function () {\r",
											"    pm.expect(pm.response.json()['letterSalutation']).to.equal(\"Sehr geehrte Frau Berger\")\r",
											"    pm.expect(pm.response.json()['salutation']).to.equal(\"Frau\")\r",
											"    pm.expect(pm.response.json()['gender']).to.equal(\"F\")\r",
											"    pm.expect(pm.response.json()['firstName']).to.equal(\"Sandra\")\r",
											"    pm.expect(pm.response.json()['lastName']).to.equal(\"Berger\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"input\": \"Frau Sandra Berger\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:5000/contact",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"contact"
									]
								}
							},
							"response": []
						},
						{
							"name": "Herr wird erkannt, Anrede wird angepasst",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Herr wird erkannt, Anrede wird angepasst\", function () {\r",
											"    pm.expect(pm.response.json()['letterSalutation']).to.equal(\"Sehr geehrter Herr Berger\")\r",
											"    pm.expect(pm.response.json()['salutation']).to.equal(\"Herr\")\r",
											"    pm.expect(pm.response.json()['gender']).to.equal(\"M\")\r",
											"    pm.expect(pm.response.json()['firstName']).to.equal(\"Sandra\")\r",
											"    pm.expect(pm.response.json()['lastName']).to.equal(\"Berger\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"input\": \"Herr Sandra Berger\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:5000/contact",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"contact"
									]
								}
							},
							"response": []
						},
						{
							"name": "Mme wird erkannt, Anrede wird angepasst",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Mme wird erkannt, Anrede wird angepasst\", function () {\r",
											"    pm.expect(pm.response.json()['letterSalutation']).to.equal(\"Madame Noir\")\r",
											"    pm.expect(pm.response.json()['salutation']).to.equal(\"Mme\")\r",
											"    pm.expect(pm.response.json()['gender']).to.equal(\"W\")\r",
											"    pm.expect(pm.response.json()['firstName']).to.equal(\"Charlotte\")\r",
											"    pm.expect(pm.response.json()['lastName']).to.equal(\"Noir\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"input\": \"Mme. Charlotte Noir\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:5000/contact",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"contact"
									]
								}
							},
							"response": []
						},
						{
							"name": "M wird erkannt, Anrede wird angepasst",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Mme wird erkannt, Anrede wird angepasst\", function () {\r",
											"    pm.expect(pm.response.json()['letterSalutation']).to.equal(\"Madame Noir\")\r",
											"    pm.expect(pm.response.json()['salutation']).to.equal(\"Mme\")\r",
											"    pm.expect(pm.response.json()['gender']).to.equal(\"W\")\r",
											"    pm.expect(pm.response.json()['firstName']).to.equal(\"Charlotte\")\r",
											"    pm.expect(pm.response.json()['lastName']).to.equal(\"Noir\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"input\": \"Mme. Charlotte Noir\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:5000/contact",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"contact"
									]
								}
							},
							"response": []
						},
						{
							"name": "Mrs wird erkannt, Anrede wird angepasst",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"jsonData = pm.response.json()\r",
											"pm.test(\"Body is correct\", function () {\r",
											"    pm.expect(jsonData.letterSalutation).to.equal(\"Dear Mrs Faber\")\r",
											"    pm.expect(jsonData['salutation']).to.eql(\"Mrs\")\r",
											"    pm.expect(jsonData['gender']).to.equal(\"F\")\r",
											"    pm.expect(jsonData['firstName']).to.equal(\"Doreen\")\r",
											"    pm.expect(jsonData['lastName']).to.equal(\"Faber\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"input\": \"Mrs. Doreen Faber\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:5000/contact",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"contact"
									]
								}
							},
							"response": []
						},
						{
							"name": "Mr wird erkannt, Anrede wird angepasst",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"jsonData = pm.response.json()\r",
											"pm.test(\"Body is correct\", function () {\r",
											"    pm.expect(jsonData.letterSalutation).to.equal(\"Dear Mrs Faber\")\r",
											"    pm.expect(jsonData['salutation']).to.eql(\"Mrs\")\r",
											"    pm.expect(jsonData['gender']).to.equal(\"F\")\r",
											"    pm.expect(jsonData['firstName']).to.equal(\"Doreen\")\r",
											"    pm.expect(jsonData['lastName']).to.equal(\"Faber\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"input\": \"Mrs. Doreen Faber\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:5000/contact",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"contact"
									]
								}
							},
							"response": []
						},
						{
							"name": "Unbekanntes Geschlecht wird als Null eingetragen, Briefrede angepasst",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Body is correct\", function () {\r",
											"    pm.expect(pm.response.json()['letterSalutation']).to.equal(\"Sehr geehrte Damen und Herren\")\r",
											"    pm.expect(pm.response.json()['salutation']).to.equal(null)\r",
											"    pm.expect(pm.response.json()['title']).to.equal(\"\")\r",
											"    pm.expect(pm.response.json()['gender']).to.equal(\"-\")\r",
											"    pm.expect(pm.response.json()['firstName']).to.equal(\"Estobar\")\r",
											"    pm.expect(pm.response.json()['lastName']).to.equal(\"y Gonzales\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"input\": \"Estobar y Gonzales\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:5000/contact",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"contact"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Namenserkennung",
					"item": [
						{
							"name": "Vorname und Nachname durch Leerzeichen getrennt werden erkannt",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Vorname und Nachname durch Leerzeichen getrennt werden erkannt\", function () {\r",
											"    pm.expect(pm.response.json()['firstName']).to.equal(\"Sandra\")\r",
											"    pm.expect(pm.response.json()['lastName']).to.equal(\"Berger\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"input\": \"Frau Sandra Berger\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:5000/contact",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"contact"
									]
								}
							},
							"response": []
						},
						{
							"name": "Vorname und Nachname mit Nachnamen Prefix werden erkannt",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Vorname und Nachname durch Leerzeichen getrennt werden erkannt\", function () {\r",
											"    pm.expect(pm.response.json()['firstName']).to.equal(\"Sandra\")\r",
											"    pm.expect(pm.response.json()['lastName']).to.equal(\"Berger\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"input\": \"Frau Sandra Berger\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:5000/contact",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"contact"
									]
								}
							},
							"response": []
						},
						{
							"name": "Vorname und Nachname durch Leerzeichen getrennt Doppelnachname mit Bindestrich werden erkannt",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Vorname und Nachname durch Leerzeichen getrennt werden erkannt\", function () {\r",
											"    pm.expect(pm.response.json()['firstName']).to.equal(\"Sandra\")\r",
											"    pm.expect(pm.response.json()['lastName']).to.equal(\"Berger\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"input\": \"Frau Sandra Berger\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:5000/contact",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"contact"
									]
								}
							},
							"response": []
						},
						{
							"name": "Vorname und Nachname durch Leerzeichen getrennt Doppelnachname mit Bindestrich Nachnamen Prefix werden erkannt",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Vorname und Nachname durch Leerzeichen getrennt Doppelnachname mit Bindestrich Nachnamen Prefix werden erkannt\", function () {\r",
											"    pm.expect(pm.response.json()['firstName']).to.equal(\"Sandra\")\r",
											"    pm.expect(pm.response.json()['lastName']).to.equal(\"von Berger-Fischer\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"input\": \"Frau Sandra von Berger-Fischer\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:5000/contact",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"contact"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	]
}